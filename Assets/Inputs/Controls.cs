//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Inputs/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""0b0b0463-a062-4b01-bc08-e037e3861c22"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""f82c7c36-3785-4108-a523-372619de2fc9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Value"",
                    ""id"": ""51a93813-ba44-4594-b3cb-8ca08f28acc6"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UseActivatedItem"",
                    ""type"": ""Button"",
                    ""id"": ""6e3b7bb8-d981-4e6d-9ba0-b28420df4d36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Put"",
                    ""type"": ""Button"",
                    ""id"": ""bb69aed1-03ed-4fef-8329-fa36ece794b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseSingleItem"",
                    ""type"": ""Button"",
                    ""id"": ""c64cfcc2-e208-47c9-94f7-4256e4f42a2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DropEquiped"",
                    ""type"": ""Button"",
                    ""id"": ""1059c4a7-2f7d-4780-9921-105788b20706"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePress"",
                    ""type"": ""Button"",
                    ""id"": ""2914ae54-23dc-44a8-a326-961e0cd80776"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePostion"",
                    ""type"": ""Value"",
                    ""id"": ""65e183b7-bfbb-4748-bc73-2291e3d4644b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UseAbilityOne"",
                    ""type"": ""Button"",
                    ""id"": ""84c81e4b-c54e-4fc8-ae9f-7d5916a7f448"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""29674dd5-1572-4ea4-97ca-357d63d28284"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5b1dd020-8a97-42d0-a372-3ceba5d13fbc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""05f72789-7d99-4450-b6d0-e81eebe308ec"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4661ec60-f6e5-49d3-8656-6d03402bc7b3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""44a5816e-1cd5-4472-840a-0f8b0cc4ffee"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9387ddc4-f151-4554-871f-878909fc2624"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eb750020-0681-4a2b-a286-62a7d133377e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseActivatedItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4747d89-2c84-448f-bfca-27557d5f6657"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Put"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21816a1f-2190-4bf9-b30f-f49dea80d695"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Put"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90cb58b5-3b5a-479a-a6ec-eb209bf48e9a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseSingleItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ad46bad-76ba-46c5-989e-2b0a8a30dccc"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropEquiped"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d644ee0-2147-4763-8444-5b878b035ccf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d57f3b1-a7a5-48ee-9476-c2a6a9775dd5"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePostion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""1eb457b2-65b4-42e4-a526-56b4c16aac4b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""764bae22-5f42-4017-910a-b5d47ad3ea7d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""eea335e1-be82-4a5d-9065-d4dfc19fb112"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a50c8ccf-7760-4edc-9267-98fbdb5c8adb"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2f8f1af8-8ae1-4806-aa64-84dfcb8c8266"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""debec71f-3ef1-456f-9a68-bb93f974c9aa"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseAbilityOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b078887-8257-4ec6-ad6b-4f161acb58c5"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Shoot = m_Player.FindAction("Shoot", throwIfNotFound: true);
        m_Player_UseActivatedItem = m_Player.FindAction("UseActivatedItem", throwIfNotFound: true);
        m_Player_Put = m_Player.FindAction("Put", throwIfNotFound: true);
        m_Player_UseSingleItem = m_Player.FindAction("UseSingleItem", throwIfNotFound: true);
        m_Player_DropEquiped = m_Player.FindAction("DropEquiped", throwIfNotFound: true);
        m_Player_MousePress = m_Player.FindAction("MousePress", throwIfNotFound: true);
        m_Player_MousePostion = m_Player.FindAction("MousePostion", throwIfNotFound: true);
        m_Player_UseAbilityOne = m_Player.FindAction("UseAbilityOne", throwIfNotFound: true);
        m_Player_PauseMenu = m_Player.FindAction("PauseMenu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Shoot;
    private readonly InputAction m_Player_UseActivatedItem;
    private readonly InputAction m_Player_Put;
    private readonly InputAction m_Player_UseSingleItem;
    private readonly InputAction m_Player_DropEquiped;
    private readonly InputAction m_Player_MousePress;
    private readonly InputAction m_Player_MousePostion;
    private readonly InputAction m_Player_UseAbilityOne;
    private readonly InputAction m_Player_PauseMenu;
    public struct PlayerActions
    {
        private @Controls m_Wrapper;
        public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Shoot => m_Wrapper.m_Player_Shoot;
        public InputAction @UseActivatedItem => m_Wrapper.m_Player_UseActivatedItem;
        public InputAction @Put => m_Wrapper.m_Player_Put;
        public InputAction @UseSingleItem => m_Wrapper.m_Player_UseSingleItem;
        public InputAction @DropEquiped => m_Wrapper.m_Player_DropEquiped;
        public InputAction @MousePress => m_Wrapper.m_Player_MousePress;
        public InputAction @MousePostion => m_Wrapper.m_Player_MousePostion;
        public InputAction @UseAbilityOne => m_Wrapper.m_Player_UseAbilityOne;
        public InputAction @PauseMenu => m_Wrapper.m_Player_PauseMenu;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
            @UseActivatedItem.started += instance.OnUseActivatedItem;
            @UseActivatedItem.performed += instance.OnUseActivatedItem;
            @UseActivatedItem.canceled += instance.OnUseActivatedItem;
            @Put.started += instance.OnPut;
            @Put.performed += instance.OnPut;
            @Put.canceled += instance.OnPut;
            @UseSingleItem.started += instance.OnUseSingleItem;
            @UseSingleItem.performed += instance.OnUseSingleItem;
            @UseSingleItem.canceled += instance.OnUseSingleItem;
            @DropEquiped.started += instance.OnDropEquiped;
            @DropEquiped.performed += instance.OnDropEquiped;
            @DropEquiped.canceled += instance.OnDropEquiped;
            @MousePress.started += instance.OnMousePress;
            @MousePress.performed += instance.OnMousePress;
            @MousePress.canceled += instance.OnMousePress;
            @MousePostion.started += instance.OnMousePostion;
            @MousePostion.performed += instance.OnMousePostion;
            @MousePostion.canceled += instance.OnMousePostion;
            @UseAbilityOne.started += instance.OnUseAbilityOne;
            @UseAbilityOne.performed += instance.OnUseAbilityOne;
            @UseAbilityOne.canceled += instance.OnUseAbilityOne;
            @PauseMenu.started += instance.OnPauseMenu;
            @PauseMenu.performed += instance.OnPauseMenu;
            @PauseMenu.canceled += instance.OnPauseMenu;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
            @UseActivatedItem.started -= instance.OnUseActivatedItem;
            @UseActivatedItem.performed -= instance.OnUseActivatedItem;
            @UseActivatedItem.canceled -= instance.OnUseActivatedItem;
            @Put.started -= instance.OnPut;
            @Put.performed -= instance.OnPut;
            @Put.canceled -= instance.OnPut;
            @UseSingleItem.started -= instance.OnUseSingleItem;
            @UseSingleItem.performed -= instance.OnUseSingleItem;
            @UseSingleItem.canceled -= instance.OnUseSingleItem;
            @DropEquiped.started -= instance.OnDropEquiped;
            @DropEquiped.performed -= instance.OnDropEquiped;
            @DropEquiped.canceled -= instance.OnDropEquiped;
            @MousePress.started -= instance.OnMousePress;
            @MousePress.performed -= instance.OnMousePress;
            @MousePress.canceled -= instance.OnMousePress;
            @MousePostion.started -= instance.OnMousePostion;
            @MousePostion.performed -= instance.OnMousePostion;
            @MousePostion.canceled -= instance.OnMousePostion;
            @UseAbilityOne.started -= instance.OnUseAbilityOne;
            @UseAbilityOne.performed -= instance.OnUseAbilityOne;
            @UseAbilityOne.canceled -= instance.OnUseAbilityOne;
            @PauseMenu.started -= instance.OnPauseMenu;
            @PauseMenu.performed -= instance.OnPauseMenu;
            @PauseMenu.canceled -= instance.OnPauseMenu;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnUseActivatedItem(InputAction.CallbackContext context);
        void OnPut(InputAction.CallbackContext context);
        void OnUseSingleItem(InputAction.CallbackContext context);
        void OnDropEquiped(InputAction.CallbackContext context);
        void OnMousePress(InputAction.CallbackContext context);
        void OnMousePostion(InputAction.CallbackContext context);
        void OnUseAbilityOne(InputAction.CallbackContext context);
        void OnPauseMenu(InputAction.CallbackContext context);
    }
}
